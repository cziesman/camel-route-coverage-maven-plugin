package com.redhat.camel.route.coverage.maven;

import com.redhat.camel.route.coverage.process.CoverageResultsProcessor;
import lombok.extern.slf4j.Slf4j;
import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugins.annotations.LifecyclePhase;
import org.apache.maven.plugins.annotations.Mojo;
import org.apache.maven.plugins.annotations.Parameter;
import org.apache.maven.project.MavenProject;

import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;

/**
 * Provides a Maven plugin to convert the XML coverage reports
 * generated by the Camel Report Plugin into HTML and Excel-compatible reports.
 */
@Mojo(name = "report", defaultPhase = LifecyclePhase.TEST)
@Slf4j
public class CamelRouteCoverageMojo extends AbstractMojo {

    private static final String TARGET = "target";

    private static final String ROUTE_COVERAGE_REPORT = "route-coverage-report";

    @Parameter(defaultValue = "${project}", required = true, readonly = true)
    private MavenProject project;

    /**
     * Specifies a custom output directory. Default output directory is <code>target/route-coverage-report</code>
     */
    @Parameter(required = false, readonly = false)
    private String outputPath;

    @Override
    public void execute() {

        CoverageResultsProcessor processor = new CoverageResultsProcessor();

        try {
            if (outputPath == null) {
                outputPath = Paths.get(projectPath(), TARGET, ROUTE_COVERAGE_REPORT).toString();
            }
            processor.generateReport(projectPath(), outputPath);
        } catch (Exception ex) {
            LOG.error(ex.getMessage(), ex);
        }
    }

    protected String projectPath() {

        File projectFile = project.getFile();
        Path projectPath = Paths.get(projectFile.toURI()).getParent();

        return projectPath.toString();
    }
}
